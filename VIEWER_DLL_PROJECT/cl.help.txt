






                         ПАРАМЕТРЫ КОМПИЛЯТОРА C/C++


                              -ОПТИМИЗАЦИЯ-

Максимальная оптимизация /O1 (приоритет места)
Максимальная оптимизация /O2 (приоритет скорости)
/Ob<n> подстановка кода (по умолчанию n=0)
/Od отключить оптимизации (по умолчанию)/Og включить глобальную оптимизацию
/Oi[-] включить подставляемые функции   /Os предпочтительное пространство кода
/Ot предпочтительная скорость кода      Оптимизация /Ox (приоритет скорости)
/favor:<blend|AMD64|INTEL64|ATOM> - выбрать процессор, для которого оптимизировать; один из вариантов:
    blend - сочетание оптимизаций для нескольких разных процессоров x64
    AMD64 - 64-разрядные процессоры AMD                                 
    INTEL64 - процессоры с архитектурой Intel(R)64                  
    ATOM - процессоры Intel(R) Atom(TM)                           

                             -ФОРМИРОВАНИЕ КОДА-

/Gu[-] гарантирует, что у разных функций будут разные адреса
/Gw[-] разделять глобальные переменные для компоновщика
/GF включить объединение строк только для чтения
/Gm[-] включить режим минимизации при построении
/Gy[-] разделять функции для компоновщика
/GS[-] включить проверку системы безопасности
/GR[-] включить C++ RTTI                
/GX[-] включить C++ EH (то же, что и /EHsc)
/guard:cf[-] включает CFG (защита потока управления)
/guard:ehcont[-]: включение метаданных продолжения EH (CET)
/EHs включить C++ EH (без исключений SEH)
/EHa включить C++ EH (с исключениями SEH)
/EHc внешний C получает значение по умолчанию nothrow
/EHr всегда создавать проверки завершения времени выполнения noexcept
/fp:<contract|except[-]|fast|precise|strict> выбор модели с плавающей запятой:
    сокращение - рассмотрите возможность использования сокращений с плавающей запятой при создании кода
    except[-] - возможность использования исключений с плавающей запятой при создании кода
    fast - "быстрая" (fast) модель с плавающей запятой; результаты менее предсказуемы
    precise - "точная" (precise) модель с плавающей запятой; результаты предсказуемы
    strict - "строгая" (strict) модель с плавающей запятой (выражает /fp:except)
/Qfast_transcendentals создание встроенных макроопределений FP даже с /fp:except
/ Qspectre[-] - включить исправления CVE 2017-5753
/Qpar[-] - включение параллельного создания кода
/Qpar-report:1 - диагностика автоматического параллелизатора; указание параллелизованных циклов
/Qpar-report:2 - диагностика автоматического параллелизатора; указание непараллелизованных циклов
/Qvec-report:1 - диагностика автоматического векторизатора; указание векторизированных циклов
/Qvec-report:2 - диагностика автоматического векторизатора; указание невекторизованных циклов
/GL[-] - включение создания кода во время компоновки
/volatile:<iso|ms> - выбор непостоянной модели:
    iso - семантика получения и освобождения не гарантируется при непостоянном обращении
    ms - семантика получения и освобождения гарантируется при непостоянном обращении
/GA оптимизировать для приложения Windows
/Ge проверять стек для всех функций     
/Gs[число] контролировать вызовы проверки стека
/Gh включить вызов функции _penter      /GH включить вызов функции _pexit
/GT создать безопасные относительно волокон доступы к локальному хранилищу потока (TLS)
/RTC1 включить быструю проверку (/RTCsu)
/RTCc преобразовать к сокращенной проверке типов
/RTCs проверка кадров стека во время выполнения
/RTCu неинициализированная проверка локального использования
/clr[:параметр] компилировать для общеязыковой среды выполнения; здесь параметр - это:
    pure: создать выходной файл только IL (без исполняемого машинного кода)
    safe: создать проверяемый выходной файл только IL
    netcore: создавать сборки, предназначенные для среды выполнения .NET Core
    noAssembly: не создавать сборку     
    nostdlib: игнорировать системный каталог .NET Framework при поиске сборок
    nostdimport: не импортировать необходимые сборки неявным образом
    initialAppDomain: включить исходное поведение AppDomain из Visual C++ 2002
    implicitKeepAlive-: отключить неявный вывод System::GC::KeepAlive(this)
/fsanitize=address Включить codegen для санитайзера адресов
/homeparams обеспечить запись параметров, передаваемых в регистрах, в стек
/GZ включить проверку стека (/RTCs)     
/Gv использовать соглашение о вызовах __vectorcall
/arch:<AVX|AVX2|AVX512> минимальные требования к архитектуре ЦП; один из вариантов:
   AVX - включить использование инструкций, доступных для процессоров, поддерживающих AVX
   AVX2 - включить использование инструкций, доступных для процессоров, поддерживающих AVX2
   AVX512 - включить использование инструкций, доступных для процессоров, поддерживающих AVX-512
/QIntel-jcc-erratum - включить устранение рисков Intel JCC Erratum
/Qspectre-load Включить устранение рисков Spectre для всех инструкций, которые загружают память
/Qspectre-load-cf Включить устранение рисков Spectre для всех инструкций управления потоком, которые загружают память
/Qspectre-jmp[-] Включить устранение рисков Spectre для безусловных инструкций по переходу
/fpcvt:<IA|BC> совместимость преобразования числа с плавающей точкой в беззнаковое целое
   IA - результаты совместимы с инструкцией VCVTTSD2USI
   BC - результаты, совместимые с компилятором VS2017 и более ранних версий

                              -ВЫХОДНЫЕ ФАЙЛЫ-

/Fa[файл] - задать имя файла листинга сборки
/FA[scu] настроить список сборок        /Fd[файл] задать имя PDB-файла
/Fe<файл> задать имя исполняемого файла /Fm[файл] задать имя файла соответствий
/Fo<файл> задать имя объектного файла   
/Fp<файл> задать имя файла предкомпилированного заголовка
/Fr[файл] задать имя исходного файла браузера
/FR[файл] задать имя расширенного SBR-файла
/Fi[файл] имя файла препроцессора       /Fd: <файл> задание имени PDB-файла
/Fe: <файл> задание имени исполняемого файла
/Fm: <файл> задание имени файла сопоставления
/Fo: <файл> задание имени объектного файла
/Fp: <файл> задание имени PCH-файла     
/FR: <файл> задание имени расширенного SBR-файла
/Fi: <файл> задание имени файла препроцессора
/Ft<dir> расположение файлов заголовков, созданных для директивы #import
/doc[файл] обработать комментарии к XML-документации и дать имя (необязательно) XDC-файлу

                              -ПРЕПРОЦЕССОР-

/AI<каталог> добавить к пути поиска сборок
/FU<файл> обязательное использование сборки или модуля 
/C не удалять комментарии               
/D<имя>{=|#}<текст> задать макроопределение
/E вывод сообщений в stdout             /EP вывод сообщений в stdout, без #line
/P вывод сообщений в файл               /Fx добавить внесенный код в файл
/FI<файл> задать имя обязательно включаемого файла
/U<имя> удалить встроенное макроопределение
/u удалить все встроенные макроопределения
/I<каталог> добавить в путь поиска включаемых файлов
/X пропустить "standard places"         
/PH создает #pragma file_hash во время предварительной обработки
/PD выводить все определения макросов   

                                -ЯЗЫК-

/std:<c++14|c++17|c++20|c++latest> - стандартная версия C++
    c++14 - ISO/IEC 14882:2014 (по умолчанию)
    c++17 - ISO/IEC 14882:2017
    c++20 - ISO/IEC 14882:2020
    c++latest - последний проект стандарта (набор возможностей может быть изменен)
/permissive[-] включить компиляцию определенного несоответствующего кода (набор возможностей может быть изменен) (включено по умолчанию)
/Ze включить расширения (по умолчанию)  /Za отключить расширения
/ZW включение языковых расширений WinRT /Zs только проверка синтаксиса
/Zc:arg1[,arg2] соответствие языку C++, где аргументы могут быть:
  forScope[-]           применять стандарт C++ для правил определения областей
  wchar_t[-]            wchar_t - встроенный тип, а не typedef
  auto[-]               использовать новый смысл стандартного C++ для auto
  trigraphs[-]          включить триграфы (отключено по умолчанию)
  rvalueCast[-]         применять правила явного преобразования типов из стандарта C++
  strictStrings[-]      отключение преобразования строкового литерала
                        в [char|wchar_t]* (отключено по умолчанию)
  implicitNoexcept[-]   включить неявный noexcept для требуемых функций
  threadSafeInit[-]     включить потокобезопасную локальную статическую инициализацию
  inline[-]             Удаление функций или данных, на которые нет ссылок, если они
                        относятся к COMDAT или используют только внутреннее связывание (отключено по умолчанию)
  sizedDealloc[-]       включить глобальные функции освобождения
                        памяти по размеру из C++14 (включено по умолчанию)
  throwingNew[-]        предполагать исключение оператора new при сбое (отключено по умолчанию)
  referenceBinding[-]   временное значение не будет привязываться к неконстантной
                        ссылке lvalue (отключено по умолчанию)
  twoPhase-             отключить двухэтапный поиск имен
  ternary[-]            применять правила из C++11 для условного оператора (отключено по умолчанию)
  noexceptTypes[-]      применять правила noexcept C++17 (включено по умолчанию в C++17 и более поздних версиях)
  alignedNew[-]         включить выравнивание C++17 для динамически выделяемых объектов (по умолчанию включено)
  hiddenFriend[-]       применить стандартные скрытые дружественные правила C++ (на что указывает /permissive-)
  externC[-]            применить стандартные правила C++ для функций "extern "C"" (на что указывает /permissive-)
  lambda[-]             Улучшенная поддержка лямбда-выражений за счет более нового обработчика (по умолчанию отключено).
  tlsGuards[-]          - создание проверок инициализации TLS-переменных во время выполнения (по умолчанию включено)
  zeroSizeArrayNew[-]   вызов элемента new/delete для массивов объектов нулевого размера (по умолчанию включено)
  static_assert[-] строгая обработка "static_assert" (подразумевается /permissive-)
  gotoScope[-]          не может перейти после инициализации переменной (подразумеваемой параметром /permissive-)
  __STDC__              определить __STDC__ для 1 в C
  enumTypes[-]          включить базовые типы перечислений C++ Стандартный (по умолчанию отключены)
/await разрешает расширение возобновляемых функций
/await:strict разрешает стандартную поддержку сопрограмм C++20 с более ранними версиями языка
/constexpr:depth<N>     предельная глубина рекурсии при вычислении constexpr (по умолчанию 512)
/constexpr:backtrace<N> выводить N вычислений constexpr в диагностике (по умолчанию 10)
/constexpr:steps<N>     завершать вычисление constexpr через N шагов (по умолчанию 100000)
/Zi включить отладочную информацию      
/Z7 включить отладочную информацию старого типа
/Zo[-] расширить отладочную информацию для оптимизированного кода (включено по умолчанию)
/ZH:[MD5|SHA1|SHA_256] хэш-алгоритм для вычисления контрольной суммы в сведениях отладки (по умолчанию: SHA_256)
/Zp[n] паковать структуры по n-байтной границе
/Zl не включать имя библиотеки по умолчанию в OBJ-файл
/vd{0|1|2} отключить или включить vtordisp
/vm<x> тип указателей на члены          
/std:<c11|c17> стандартная версия C
    c11 - ISO/IEC 9899:2011
    c17 - ISO/IEC 9899:2018
/ZI включить отладочные данные в режиме "Изменить и продолжить"
/openmp включить языковые расширения OpenMP 2.0
/openmp:experimental: включить расширения языка OpenMP 2.0, а также выбрать расширения языка OpenMP 3.0 и более поздних версий
/openmp:llvm расширения языка OpenMP, использующие среду выполнения LLVM

                              -ПРОЧЕЕ-

@<файл> параметры файла ответов         
/?, /help вывести это справочное сообщение
/bigobj создать расширенный формат объекта
/c только компилировать, без компоновки 
/errorReport: нерекомендуемый параметр. Сообщение о внутренних ошибках компилятора в Майкрософт.
    none - не отправлять отчет          
    prompt - предложить немедленную отправку отчета
    queue - при следующем входе в систему в качестве администратора предложить отправку отчета (параметр по умолчанию)
    send - автоматически отправлять отчет
/FC использовать полные пути в диагностических сообщениях
/H<число> максимальная длина внешнего имени
/J использовать по умолчанию unsigned для типа char
/MP[n] использовать до n процессов для компиляции
/nologo не выводить уведомление об авторских правах
/showIncludes показать имена включаемых файлов
/Tc<исходный_файл> компилировать файл как .c
/Tp<исходный_файл> компилировать файл как .cpp
/TC компилировать все файлы как .c      /TP компилировать все файлы как .cpp
/V<строка> задать строку с номером версии
/Yc[файл] создать PCH-файл              
/Yd выводить отладочные данные в каждый OBJ-файл
/Yl[символ] ввести ссылку PCH-файла для отладочной библиотеки
/Yu[файл] использовать PCH-файл         /Y- отключить все параметры PCH
/Zm<n> задать максимальное выделение памяти (% от значения по умолчанию)
/FS принудительно использовать MSPDBSRV.EXE
/source-charset:<iana-name>|.nnnn: задание исходной кодировки
/execution-charset:<iana-name>|.nnnn задание кодировки выполнения
/utf-8 задание UTF-8 в качестве исходной кодировки и кодировки выполнения
/validate-charset[-] проверка файлов UTF-8 на наличие только допустимых знаков
/fastfail[-] включение режима fast-fail 
/JMC[-] включение отладки только собственного кода с помощью функции Just My Code
/presetPadding[-] инициализация заполнения нулевым значением для типов классов на основе стека
/volatileMetadata[-] создает метаданные при доступах к энергозависимой памяти
/sourcelink [file] файл, содержащий сведения об исходной ссылке

                                -КОМПОНОВКА-

/LD создать библиотеку .DLL             
/LDd создать отладочную библиотеку (.DLL)
/LN создать .netmodule                  /F<число> задать размер стека
/link [параметры компоновщика и библиотеки]
/MD компоновать с MSVCRT.LIB            /MT компоновать с LIBCMT.LIB
/MDd компоновать с отладочной библиотекой MSVCRTD.LIB
/MTd компоновать с отладочной библиотекой LIBCMTD.LIB

                              -АНАЛИЗ КОДА-

/analyze[-] Включить анализ машинного кода
/analyze:quiet[-] Не выводить предупреждения на консоль
/analyze:log<имя> Вывод предупреждений в файл
/analyze:autolog Запись журнала в *.pftlog
/analyze:autolog:ext<расширение> Запись журнала в *.<расширение>
/analyze:autolog- Не записывать файл журнала
/analyze:WX- Предупреждения не являются критическими
/analyze:stacksize<число> Максимальный размер кадра стека
/analyze:max_paths<число> Максимальное число путей
/analyze: только анализ, без создания кода

                              -ДИАГНОСТИКА-

/diagnostics:<args,...> - определяет формат сообщений диагностики:
             classic - сохранение предыдущего формата
             column[-] - печать сведений столбца
             caret[-] - печать столбца и указанной исходной строки
/Wall включить все предупреждения       /w   отключить все предупреждения
/W<n> установить уровень предупреждений (по умолчанию n=1)
/Wv:xx[.yy[.zzzzz]] отключить предупреждения, появившиеся после версии xx.yy.zzzzz
/WX обрабатывать предупреждения как ошибки
/WL включить однострочные диагностические сообщения
/wd<n> отключить предупреждение уровня n
/we<n> обрабатывать предупреждение уровня n как ошибку
/wo<n> выдавать предупреждение уровня n один раз
/w<l><n> установить для n уровень предупреждений 1-4
/external:I <путь>      - расположение внешних заголовков
/external:env:<var> - переменная среды с расположениями внешних заголовков
/external:anglebrackets - считать все заголовки в <> внешними
/external:W<n> - порог предупреждений для внешних заголовков
/external:templates[-]  - оценка порога предупреждений по всей цепочке создания экземпляров шаблонов
/sdl - включить дополнительные уведомления и функции безопасности
/options:strict неизвестные параметры компилятора являются ошибкой

